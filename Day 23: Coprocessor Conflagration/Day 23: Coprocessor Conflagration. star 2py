#!/usr/local/bin/python3

"""
0        set b 67        initialisation
1        set c b         initialisation
2        jnz a 2         initialisation
3        jnz 1 5         initialisation
4        mul b 100       initialisation
5        sub b -100000   initialisation
6        set c b         initialisation
7        sub c -17000    initialisation

{'a': 1, 'b': 106700, 'c': 123700, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0}

8        set f 1        setting bool f to false identifying if d*b == e in inner loop (is prime?)
9        set d 2        start outer loop (from 2)
10       set e 2        start inner loop (from 2)
11       set g d        EVAL: if d * b == e:  f == 0
12       mul g e        EVAL: if d * b == e:  f == 0
13       sub g b        EVAL: if d * b == e:  f == 0
14       jnz g 2        EVAL: if d * b == e:  f == 0
15       set f 0        Setting bool f to true (identifying prime has been found)
16       sub e -1       increase e with 1 (inner loop)
17       set g e        EVAL: if e == b: loop back to 11
18       sub g b        EVAL: if e == b: loop back to 11
19       jnz g -8       EVAL: if e == b: loop back to 11
20       sub d -1       increase d with 1 (outer loop)
21       set g d        EVAL: if d == b: loop back to 11
22       sub g b        EVAL: if d == b: loop back to 11
23       jnz g -13      EVAL: if d == b: loop back to 11
24       jnz f 2        EVAL: if not f == 0: h += 1
25       sub h -1       EVAL: if not f == 0: h += 1
26       set g b        EVAL: if b == c: exit() else b += 17 and loop back to 8
27       sub g c        EVAL: if b == c: exit() else b += 17 and loop back to 8
28       jnz g 2        EVAL: if b == c: exit() else b += 17 and loop back to 8
29       jnz 1 3        EVAL: if b == c: exit() else b += 17 and loop back to 8
30       sub b -17      EVAL: if b == c: exit() else b += 17 and loop back to 8
31       jnz 1 -23      EVAL: if b == c: exit() else b += 17 and loop back to 8

exit = False
while not exit:
    f = 1
    for d in range(2, b):
        for e in range(2, b):
            if d * e == b:
                f = 0
    if f == 0:
        h += 1
    b += 17
    if b > c:
        exit = True
print(h)

"""

b = 106700
c = 123700
h = 0

for g in xrange(b, c + 1, 17):
    for d in xrange(2, int(g / 2)):
        if g % d == 0:
            h += 1
            break
print(h)

